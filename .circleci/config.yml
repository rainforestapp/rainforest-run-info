version: 2.1

commands:
  install_dependencies:
    steps:
      - run:
          name: Install Dependencies
          command: yarn install --frozen-lockfile

jobs:
  test:
    working_directory: ~/rainforestapp/rainforest-run-info
    docker:
      - image: circleci/node
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_TOKEN
    steps:
      - checkout
      - install_dependencies
      - run:
          name: Test
          command: yarn run test
      - run:
          name: Lint
          command: yarn run lint
      - run:
          name: Prettier
          command: yarn run prettier:CI

  build:
    working_directory: ~/rainforestapp/rainforest-run-info
    docker:
      - image: circleci/node
    steps:
      - checkout
      - install_dependencies
      - run:
          name: Build
          command: yarn run build
      - persist_to_workspace:
          root: ~/rainforestapp/rainforest-run-info
          paths:
            - dist/*

  upload_release:
    working_directory: ~/rainforestapp/rainforest-run-info
    docker:
      - image: rainforestapp/docker-aws-cli:latest
    steps:
      - attach_workspace:
          at: ~/rainforestapp/rainforest-run-info
      - run:
          name: Sync to S3
          command: |
            aws s3 sync dist s3://static.rainforestqa.com/rainforest-run-info/ --acl public-read --cache-control max-age=60

  publish_to_npm:
    docker:
      - image: circleci/node
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_TOKEN
    steps:
      - checkout
      - install_dependencies
      - run:
          name: Write NPM Token to ~/.npmrc
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
      - run:
          name: Publish to NPM
          command: npm publish --access=public

  update_jira:
    docker:
      - image: alpine:3.8
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_TOKEN
    steps:
      - run:
          name: Install dependencies
          command: apk add --no-cache bash curl git openssh
      - checkout
      - run:
          name: Update JIRA
          command: .circleci/update-jira.sh

workflows:
  version: 2
  build_and_upload:
    jobs:
      - test:
        filters:
          tags:
            only: /^v.*/
      - build:
        filters:
          branches:
            only: master
      - upload_release:
          context:
            - frontend-s3-sync
          requires:
            - test
            - build
          filters:
            branches:
              only: master
      - publish_to_npm:
          context:
            - DockerHub
            - NPM
          requires:
            - test
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
      - update_jira:
          requires:
            - upload_release
          context:
            - DockerHub
            - update-jira-webhook
